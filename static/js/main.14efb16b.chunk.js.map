{"version":3,"sources":["helpers/fecthLocalStorage.js","services/fetchToken.js","redux/actions/actions.js","redux/actions/actionTypes.js","components/LoginNameInput.js","components/LoginEmailInput.js","helpers/validateLogin.js","components/LoginForm.js","pages/Login.js","services/fetchQuiz.js","helpers/getPlayerAvatar.js","components/Header.js","components/CountDownTimer.js","components/ButtonNext.js","components/Loading.js","components/Answers.js","helpers/getButtons.js","redux/reducers/player.js","redux/reducers/token.js","redux/reducers/reducerQuiz.js","redux/reducers/rootReducer.js","redux/store/store.js","helpers/calculateScore.js","helpers/constants.js","components/Questions.js","helpers/savePlayerRanking.js","pages/GamePage.js","pages/Settings.js","pages/Feedback.js","pages/Ranking.js","App.js","index.js","trivia.png"],"names":["SAVE_LOCAL_STORAGE","key","value","a","localStorage","setItem","JSON","stringify","GET_LOCAL_STORAGE","parse","getItem","fetchToken","fetch","apiResponse","json","apiJson","token","login","payload","type","quiz","LoginNameInput","handleInputChange","this","props","Form","Label","htmlFor","className","Control","data-testid","name","spellcheck","onChange","Component","LoginEmailInput","validEmail","validateLogin","playerEmail","playerName","test","length","LoginForm","handleSettingsClick","handleSubmit","Group","Button","variant","disabled","onClick","Login","state","target","setState","event","preventDefault","history","dispatch","tokenSTRING","playerToken","push","Container","Row","Col","Image","fluid","src","logo","alt","connect","fetchQuiz","getToken","results","getPlayerAvatar","hashEmail","md5","toString","Header","userName","userEmail","points","React","player","gravatarEmail","score","CountDownTimer","timer","id","undefined","ButtonNext","clickHandler","Loading","Answers","correctAnswer","shuffledAnswers","handleAnswerClick","answers","onKeyDown","role","tabIndex","map","answer","answerIndex","cleanAnswer","sanitizeHtml","getButtons","wrongBtnId","correctBtnId","wrongAnswerButtons","document","querySelectorAll","correctAnswerButton","INICIAL_STATE","assertions","action","shuffleArray","array","i","j","Math","floor","random","temp","searchIndex","actionPayload","testing","correct_answer","incorrect_answers","randoming","reducerQuiz","rootReducer","combineReducers","store","createStore","reducers","composeWithDevTools","applyMiddleware","thunk","window","Cypress","calculateScore","countDownTimer","currQuiz","difficulty","Questions","buttonNextVisible","stopCountDown","currQuizIndex","questionsArr","answersButtonActions","actionString","answersButtons","forEach","btn","prevProps","prevState","nextQuestionHandler","question","questionIndex","cleanCategory","category","cleanQuestion","savePlayerRanking","getState","playerRankingInfo","picture","playersRanking","newRanking","GamePage","questions","startCountDown","clearInterval","setIntervalId","setInterval","querys","Settings","Feedback","wellDone","componentDidMount","correctAnswers","handleClickPlayAgain","handleClickRanking","finalScore","email","Ranking","handleClickGoHome","sortedRanking","sort","b","index","App","exact","path","render","component","ReactDOM","getElementById","module","exports"],"mappings":"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","file":"static/js/main.14efb16b.chunk.js","sourcesContent":["export const SAVE_LOCAL_STORAGE = async (key, value) => {\n  await localStorage.setItem(key, JSON.stringify(value));\n};\n\nexport const GET_LOCAL_STORAGE = (key) => JSON.parse(localStorage.getItem(key));\n","const REQUEST_API = 'https://opentdb.com/api_token.php?command=request';\n\nconst fetchToken = async () => {\n  const apiResponse = await fetch(REQUEST_API);\n  const apiJson = await apiResponse.json();\n  return apiJson.token;\n};\n\nexport default fetchToken;\n","import { LOGIN, TOKEN, QUIZ, ADD_SCORE, RESET_SCORE } from './actionTypes';\n\nexport const login = (payload) => ({ type: LOGIN, payload });\n\nexport const token = (payload) => ({ type: TOKEN, payload });\n\nexport const quiz = (payload) => ({ type: QUIZ, payload });\n\nexport const addScore = (payload) => ({ type: ADD_SCORE, payload });\n\nexport const resetScore = (payload) => ({ type: RESET_SCORE, payload });\n","export const LOGIN = 'LOGIN';\nexport const TOKEN = 'TOKEN';\nexport const QUIZ = 'QUIZ';\nexport const ADD_SCORE = 'ADD_SCORE';\nexport const RESET_SCORE = 'RESET_SCORE';\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport { Form } from 'react-bootstrap';\n\nclass LoginNameInput extends Component {\n  render() {\n    const { handleInputChange } = this.props;\n    return (\n      <div>\n        <Form.Label htmlFor=\"playerName\" className=\"name-input-label\">\n          Name\n          <Form.Control\n            type=\"text\"\n            data-testid=\"input-player-name\"\n            className=\"name-input\"\n            name=\"playerName\"\n            spellcheck=\"false\"\n            onChange={ handleInputChange }\n          />\n        </Form.Label>\n      </div>\n    );\n  }\n}\n\nLoginNameInput.propTypes = {\n  handleInputChange: PropTypes.func.isRequired,\n};\n\nexport default LoginNameInput;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport { Form } from 'react-bootstrap';\n\nclass LoginEmailInput extends Component {\n  render() {\n    const { handleInputChange } = this.props;\n    return (\n      <div>\n        <Form.Label htmlFor=\"playerEmail\" className=\"email-input-label\">\n          E-mail\n          <Form.Control\n            type=\"email\"\n            data-testid=\"input-gravatar-email\"\n            className=\"email-input\"\n            name=\"playerEmail\"\n            spellcheck=\"false\"\n            onChange={ handleInputChange }\n          />\n        </Form.Label>\n      </div>\n    );\n  }\n}\n\nLoginEmailInput.propTypes = {\n  handleInputChange: PropTypes.func.isRequired,\n};\n\nexport default LoginEmailInput;\n","const minLenghtName = 3;\nconst validEmail = /\\S+@\\S+\\.\\S+/;\n\nconst validateLogin = (playerEmail, playerName) => (\n  validEmail.test(playerEmail) && playerName.length >= minLenghtName\n);\n\nexport default validateLogin;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport { Form, Button } from 'react-bootstrap';\nimport LoginNameInput from './LoginNameInput';\nimport LoginEmailInput from './LoginEmailInput';\nimport validateLogin from '../helpers/validateLogin';\n\nclass LoginForm extends Component {\n  render() {\n    const {\n      handleInputChange,\n      handleSettingsClick,\n      handleSubmit,\n      playerName,\n      playerEmail,\n    } = this.props;\n    return (\n      <div>\n        <Form className=\"form\">\n          <Form.Group>\n            <LoginNameInput\n              handleInputChange={ handleInputChange }\n            />\n            <LoginEmailInput\n              handleInputChange={ handleInputChange }\n            />\n            <Button\n              variant=\"success\"\n              type=\"submit\"\n              className=\"play-btn\"\n              data-testid=\"btn-play\"\n              disabled={ !validateLogin(playerEmail, playerName) }\n              onClick={ handleSubmit }\n            >\n              Play\n            </Button>\n          </Form.Group>\n          <Button\n            variant=\"secondary\"\n            type=\"button\"\n            className=\"settings-btn\"\n            data-testid=\"btn-settings\"\n            onClick={ handleSettingsClick }\n          >\n            Configurações\n          </Button>\n        </Form>\n      </div>\n    );\n  }\n}\n\nLoginForm.propTypes = {\n  handleInputChange: PropTypes.func.isRequired,\n  handleSettingsClick: PropTypes.string.isRequired,\n  handleSubmit: PropTypes.string.isRequired,\n  playerName: PropTypes.string.isRequired,\n  playerEmail: PropTypes.string.isRequired,\n};\n\nexport default LoginForm;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { PropTypes } from 'prop-types';\nimport { Image, Container, Row, Col } from 'react-bootstrap';\nimport logo from '../trivia.png';\nimport { SAVE_LOCAL_STORAGE, GET_LOCAL_STORAGE } from '../helpers/fecthLocalStorage';\nimport fetchToken from '../services/fetchToken';\nimport { token, login } from '../redux/actions/actions';\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport LoginForm from '../components/LoginForm';\n\nclass Login extends Component {\n  state = {\n    playerName: '',\n    playerEmail: '',\n  }\n\n  handleInputChange = ({ target: { name, value } }) => {\n    this.setState({ [name]: value });\n  }\n\n  handleSubmit = async (event) => {\n    event.preventDefault();\n    const { history, dispatch } = this.props;\n    dispatch(login(this.state));\n    SAVE_LOCAL_STORAGE('token', await fetchToken());\n    const tokenSTRING = GET_LOCAL_STORAGE('token');\n    this.setState({ playerToken: tokenSTRING });\n    const { playerToken } = this.state;\n    dispatch(token(playerToken));\n    history.push('/gamepage');\n  };\n\n  handleSettingsClick = () => {\n    const { history } = this.props;\n    history.push('./settings');\n  }\n\n  render() {\n    const { playerName, playerEmail } = this.state;\n    return (\n      <Container className=\"form-container\">\n        <Row>\n          <Col>\n            <LoginForm\n              handleInputChange={ this.handleInputChange }\n              handleSettingsClick={ this.handleSettingsClick }\n              handleSubmit={ this.handleSubmit }\n              playerName={ playerName }\n              playerEmail={ playerEmail }\n            />\n          </Col>\n          <Col>\n            <Image\n              fluid\n              className=\"trivia-logo\"\n              src={ logo }\n              alt=\"logo\"\n            />\n          </Col>\n        </Row>\n\n      </Container>\n    );\n  }\n}\n\nLogin.propTypes = {\n  history: PropTypes.instanceOf(Object).isRequired,\n  dispatch: PropTypes.func.isRequired,\n};\n\nexport default connect()(Login);\n","import { GET_LOCAL_STORAGE, SAVE_LOCAL_STORAGE } from '../helpers/fecthLocalStorage';\nimport fetchToken from './fetchToken';\n\nconst REQUEST_API = 'https://opentdb.com/api.php?amount=5&token=';\n\nconst fetchQuiz = async () => {\n  let getToken = GET_LOCAL_STORAGE('token');\n  let apiResponse = await fetch(`${REQUEST_API}${getToken}`);\n  let apiJson = await apiResponse.json();\n  if (apiJson.results.length === 0) {\n    SAVE_LOCAL_STORAGE('token', await fetchToken());\n    getToken = GET_LOCAL_STORAGE('token');\n    apiResponse = await fetch(`${REQUEST_API}${getToken}`);\n    apiJson = await apiResponse.json();\n    return apiJson.results;\n  }\n  return apiJson.results;\n};\n\nexport default fetchQuiz;\n","import md5 from 'crypto-js/md5';\n\nconst getPlayerAvatar = (playerEmail) => {\n  const hashEmail = md5(playerEmail).toString();\n  return `https://www.gravatar.com/avatar/${hashEmail}`;\n};\n\nexport default getPlayerAvatar;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport getPlayerAvatar from '../helpers/getPlayerAvatar';\n\nclass Header extends React.Component {\n  render() {\n    const { userName, userEmail, points } = this.props;\n    return (\n      <div className=\"gamepage-header\">\n        <img\n          data-testid=\"header-profile-picture\"\n          src={ getPlayerAvatar(userEmail) }\n          alt=\"player avatar\"\n          className=\"player-avatar\"\n        />\n        <p data-testid=\"header-player-name\">{ userName }</p>\n        <p\n          data-testid=\"header-score\"\n        >\n          score:\n          {' '}\n          { points }\n        </p>\n      </div>\n    );\n  }\n}\n\nHeader.propTypes = {\n  userEmail: PropTypes.string.isRequired,\n  userName: PropTypes.string.isRequired,\n  points: PropTypes.number.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  userName: state.player.name,\n  userEmail: state.player.gravatarEmail,\n  points: state.player.score,\n});\n\nexport default connect(mapStateToProps)(Header);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass CountDownTimer extends Component {\n  render() {\n    const { timer } = this.props;\n    return (\n      <div id=\"timer\" className=\"timer\">\n        { timer === undefined ? '' : timer }\n      </div>\n    );\n  }\n}\n\nCountDownTimer.propTypes = {\n  timer: PropTypes.number.isRequired,\n};\n\nexport default CountDownTimer;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass ButtonNext extends Component {\n  render() {\n    const { clickHandler } = this.props;\n    return (\n      <button\n        name=\"button-next\"\n        className=\"next-btn\"\n        type=\"button\"\n        onClick={ clickHandler }\n        data-testid=\"btn-next\"\n      >\n        Next\n      </button>\n    );\n  }\n}\n\nButtonNext.propTypes = {\n  clickHandler: PropTypes.func.isRequired,\n};\n\nexport default ButtonNext;\n","import React, { Component } from 'react';\n\nclass Loading extends Component {\n  render() {\n    return (\n      <div>\n        <p>Loading...</p>\n      </div>\n    );\n  }\n}\n\nexport default Loading;\n","/* eslint-disable react/no-did-update-set-state */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport sanitizeHtml from 'sanitize-html';\nimport Loading from './Loading';\n\nclass Answers extends Component {\n  render() {\n    const { correctAnswer, shuffledAnswers, handleAnswerClick } = this.props;\n    const answers = [...shuffledAnswers];\n\n    return (\n      <div\n        className=\"answers-container\"\n        data-testid=\"answer-options\"\n        id=\"parentButton\"\n        onClick={ handleAnswerClick }\n        onKeyDown={ handleAnswerClick }\n        role=\"button\"\n        tabIndex={ 0 }\n\n      >\n        { answers.length === 0 ? <Loading /> : answers.map((answer, answerIndex) => {\n          const cleanAnswer = sanitizeHtml(answer);\n          if (answer === correctAnswer) {\n            return (\n              <button\n                name=\"answer\"\n                className=\"answer-btn\"\n                key={ answerIndex }\n                data-testid=\"correct-answer\"\n                type=\"button\"\n                id=\"correct\"\n              >\n                {cleanAnswer}\n              </button>\n            );\n          }\n\n          return (\n            <button\n              name=\"answer\"\n              className=\"answer-btn\"\n              key={ answerIndex }\n              type=\"button\"\n              data-testid={ `wrong-answer-${answerIndex}` }\n              id=\"wrong\"\n            >\n              {cleanAnswer}\n            </button>\n          );\n        }) }\n      </div>\n    );\n  }\n}\n\nAnswers.propTypes = {\n  correctAnswer: PropTypes.string.isRequired,\n  shuffledAnswers: PropTypes.instanceOf(Array).isRequired,\n  handleAnswerClick: PropTypes.func.isRequired,\n};\n\nexport default Answers;\n","const getButtons = (wrongBtnId, correctBtnId) => {\n  const wrongAnswerButtons = document.querySelectorAll(wrongBtnId);\n  const correctAnswerButton = document.querySelectorAll(correctBtnId);\n  const answersButtons = [...wrongAnswerButtons, ...correctAnswerButton];\n  return answersButtons;\n};\n\nexport default getButtons;\n","import { LOGIN, ADD_SCORE, RESET_SCORE } from '../actions/actionTypes';\n\nconst INICIAL_STATE = {\n  gravatarEmail: '',\n  name: '',\n  score: 0,\n  assertions: 0,\n};\n\nfunction player(state = INICIAL_STATE, action) {\n  switch (action.type) {\n  case LOGIN:\n    return {\n      ...state,\n      name: action.payload.playerName,\n      gravatarEmail: action.payload.playerEmail,\n    };\n  case ADD_SCORE:\n    return {\n      ...state,\n      score: state.score + action.payload,\n      assertions: state.assertions + 1,\n    };\n  case RESET_SCORE:\n    return {\n      ...state,\n      score: 0,\n      assertions: 0,\n    };\n  default:\n    return state;\n  }\n}\n\nexport default player;\n","import { TOKEN } from '../actions/actionTypes';\n\nconst INICIAL_STATE = '';\n\nconst token = (state = INICIAL_STATE, action) => {\n  switch (action.type) {\n  case TOKEN:\n    return action.payload;\n  default:\n    return state;\n  }\n};\n\nexport default token;\n","import { QUIZ } from '../actions/actionTypes';\n\nconst INICIAL_STATE = {\n  quiz: [],\n};\n\nfunction shuffleArray(array) {\n  for (let i = array.length - 1; i > 0; i -= 1) {\n    const j = Math.floor(Math.random() * (i + 1));\n    const temp = array[i];\n    array[i] = array[j];\n    array[j] = temp;\n  }\n  return array;\n}\n\nfunction searchIndex(actionPayload) {\n  for (let i = actionPayload.length - 1; i >= 0; i -= 1) {\n    const testing = [\n      actionPayload[i]\n        .correct_answer, ...actionPayload[i]\n        .incorrect_answers,\n    ];\n    actionPayload[i].randoming = shuffleArray(testing);\n  }\n  return actionPayload;\n}\n\nfunction reducerQuiz(state = INICIAL_STATE, action) {\n  switch (action.type) {\n  case QUIZ:\n    return {\n      quiz: searchIndex(action.payload),\n    };\n  default:\n    return state;\n  }\n}\n\nexport default reducerQuiz;\n","import { combineReducers } from 'redux';\nimport player from './player';\nimport token from './token';\nimport reducerQuiz from './reducerQuiz';\n\nconst rootReducer = combineReducers({ player, token, reducerQuiz });\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport reducers from '../reducers/rootReducer';\n\nconst store = createStore(\n  reducers,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nif (window.Cypress) {\n  window.store = store;\n}\n\nexport default store;\n","import store from '../redux/store/store';\nimport { addScore } from '../redux/actions/actions';\nimport {\n  HARD_DIFFICULTY,\n  MEDIUM_DIFFICULTY,\n  EASY_DIFFICULTY,\n  SCORE_MULTIPLIER,\n} from './constants';\n\nconst calculateScore = (countDownTimer, currQuiz) => {\n  const { difficulty } = currQuiz;\n\n  let currQuestionDifficulty = 0;\n\n  if (difficulty === 'hard') {\n    currQuestionDifficulty = HARD_DIFFICULTY;\n  } else if (difficulty === 'medium') {\n    currQuestionDifficulty = MEDIUM_DIFFICULTY;\n  } else {\n    currQuestionDifficulty = EASY_DIFFICULTY;\n  }\n\n  const score = SCORE_MULTIPLIER + (countDownTimer * currQuestionDifficulty);\n\n  store.dispatch(addScore(score));\n};\n\nexport default calculateScore;\n","export const ONE_SECOND = 1000;\n\nexport const LAST_QUESTION_INDEX = 4;\n\nexport const HARD_DIFFICULTY = 3;\n\nexport const MEDIUM_DIFFICULTY = 2;\n\nexport const EASY_DIFFICULTY = 1;\n\nexport const SCORE_MULTIPLIER = 10;\n\nexport const SELECT_N_DISABLE = 'select & disable';\n\nexport const RESET_N_ENABLE = 'reset & enable';\n","/* eslint-disable react/no-did-update-set-state */\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport sanitizeHtml from 'sanitize-html';\nimport ButtonNext from './ButtonNext';\nimport CountDownTimer from './CountDownTimer';\nimport Answers from './Answers';\nimport getButtons from '../helpers/getButtons';\nimport Loading from './Loading';\nimport { SELECT_N_DISABLE, RESET_N_ENABLE } from '../helpers/constants';\nimport calculateScore from '../helpers/calculateScore';\n\nclass Questions extends Component {\n  state = {\n    buttonNextVisible: false,\n  }\n\n  componentDidUpdate(prevProps) {\n    const { currQuizIndex, timer } = this.props;\n\n    if (currQuizIndex !== prevProps.currQuizIndex) {\n      this.answersButtonActions(RESET_N_ENABLE);\n\n      this.setState({ buttonNextVisible: false });\n    }\n\n    if (timer === 0 && prevProps.timer === 1) {\n      this.answersButtonActions(SELECT_N_DISABLE);\n\n      this.setState((prevState) => ({ buttonNextVisible: !prevState.buttonNextVisible }));\n    }\n  }\n\n  handleAnswerClick = (event) => {\n    const { stopCountDown, timer, currQuizIndex, questionsArr } = this.props;\n\n    if (event.target.id === 'correct') {\n      calculateScore(timer, questionsArr[currQuizIndex]);\n    }\n\n    if (event.target.name === 'answer') {\n      stopCountDown();\n\n      this.setState({ buttonNextVisible: true });\n\n      this.answersButtonActions(SELECT_N_DISABLE);\n    }\n  }\n\n  answersButtonActions = (actionString) => {\n    const answersButtons = getButtons('#wrong', '#correct');\n\n    if (actionString === 'select & disable') {\n      answersButtons.forEach((btn) => {\n        btn.disabled = true;\n        if (btn.id === 'correct') {\n          btn.className = 'correct';\n        } else {\n          btn.className = 'wrong';\n        }\n      });\n    }\n\n    if (actionString === 'reset & enable') {\n      answersButtons.forEach((btn) => {\n        btn.className = 'answer-btn';\n        btn.disabled = false;\n      });\n    }\n  }\n\n  render() {\n    const { questionsArr, currQuizIndex, nextQuestionHandler } = this.props;\n    const { buttonNextVisible } = this.state;\n\n    return (\n      <div>\n        <CountDownTimer />\n        { questionsArr.length === 0\n          ? <Loading /> : ([questionsArr[currQuizIndex]])\n            .map((question, questionIndex) => {\n              const cleanCategory = sanitizeHtml(question.category);\n              const cleanQuestion = sanitizeHtml(question.question);\n              return (\n                <div className=\"quiz-container\" key={ questionIndex }>\n\n                  <div className=\"quiz-title\">\n                    <p\n                      className=\"quiz-category\"\n                      data-testid=\"question-category\"\n                    >\n                      { cleanCategory}\n                    </p>\n                    <p\n                      className=\"question\"\n                      data-testid=\"question-text\"\n                    >\n                      { cleanQuestion }\n\n                    </p>\n                    { buttonNextVisible ? <ButtonNext\n                      clickHandler={ nextQuestionHandler }\n                    /> : ''}\n                  </div>\n                  <Answers\n                    handleAnswerClick={ this.handleAnswerClick }\n                    correctAnswer={ question.correct_answer }\n                    shuffledAnswers={ question.randoming }\n                  />\n                </div>\n              );\n            })}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  questionsArr: state.reducerQuiz.quiz,\n});\n\nQuestions.propTypes = {\n  questionsArr: PropTypes.instanceOf(Array).isRequired,\n  stopCountDown: PropTypes.func.isRequired,\n  timer: PropTypes.number.isRequired,\n  currQuizIndex: PropTypes.number.isRequired,\n  nextQuestionHandler: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps)(Questions);\n","import store from '../redux/store/store';\nimport { GET_LOCAL_STORAGE, SAVE_LOCAL_STORAGE } from './fecthLocalStorage';\nimport getPlayerAvatar from './getPlayerAvatar';\n\nconst savePlayerRanking = () => {\n  const { name, score, gravatarEmail } = store.getState().player;\n  const picture = getPlayerAvatar(gravatarEmail);\n  const playerRankingInfo = {\n    name,\n    score,\n    picture,\n  };\n\n  const playersRanking = GET_LOCAL_STORAGE('ranking');\n\n  if (playersRanking === null) {\n    SAVE_LOCAL_STORAGE('ranking', [playerRankingInfo]);\n  } else {\n    const newRanking = [...playersRanking, playerRankingInfo];\n    SAVE_LOCAL_STORAGE('ranking', newRanking);\n  }\n};\n\nexport default savePlayerRanking;\n","import React, { Component } from 'react';\nimport { PropTypes } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { quiz, resetScore } from '../redux/actions/actions';\nimport fetchQuiz from '../services/fetchQuiz';\nimport Header from '../components/Header';\nimport CountDownTimer from '../components/CountDownTimer';\nimport Questions from '../components/Questions';\nimport savePlayerRanking from '../helpers/savePlayerRanking';\nimport {\n  ONE_SECOND,\n  LAST_QUESTION_INDEX,\n} from '../helpers/constants';\n\nclass GamePage extends Component {\n  state = {\n    questions: [],\n    countDownTimer: 30,\n    currQuizIndex: 0,\n  }\n\n  async componentDidMount() {\n    const querys = await fetchQuiz();\n    const { dispatch } = this.props;\n\n    this.setIntervalId = setInterval(this.startCountDown, ONE_SECOND);\n\n    this.setState({\n      questions: querys,\n    }, () => {\n      const { questions } = this.state;\n\n      dispatch(quiz(questions));\n    });\n    dispatch(resetScore(0));\n  }\n\n  componentWillUnmount() {\n\n    const { dispatch } = this.props;\n\n    savePlayerRanking();\n    this.stopCountDown();\n    dispatch(quiz([]));\n  }\n\n  startCountDown = () => {\n    this.setState((prevState) => ({\n      countDownTimer: prevState.countDownTimer !== 0 ? prevState.countDownTimer - 1 : 0,\n    }));\n  };\n\n  stopCountDown = () => {\n    clearInterval(this.setIntervalId);\n  }\n\n  nextQuestionHandler = () => {\n    this.stopCountDown();\n    const { currQuizIndex } = this.state;\n\n    if (currQuizIndex === LAST_QUESTION_INDEX) {\n      const { history } = this.props;\n      history.push('/feedback');\n    }\n\n    this.setState((prevState) => ({\n      ...prevState,\n      currQuizIndex: prevState.currQuizIndex + 1,\n      countDownTimer: 30,\n    }));\n\n    this.setIntervalId = setInterval(this.startCountDown, ONE_SECOND);\n  }\n\n  render() {\n    const { countDownTimer, currQuizIndex } = this.state;\n    return (\n      <div className=\"gamepage\">\n        <Header />\n        <CountDownTimer timer={ countDownTimer } />\n        <Questions\n          timer={ countDownTimer }\n          currQuizIndex={ currQuizIndex }\n          stopCountDown={ this.stopCountDown }\n          nextQuestionHandler={ this.nextQuestionHandler }\n          calculateScore={ this.calculateScore }\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  questionsArr: state.reducerQuiz.quiz,\n});\n\nGamePage.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  history: PropTypes.instanceOf(Object).isRequired,\n};\n\nexport default connect(mapStateToProps)(GamePage);\n","import React from 'react';\n\nclass Settings extends React.Component {\n  render() {\n    return (\n      <h1 data-testid=\"settings-title\">Configurações</h1>\n    );\n  }\n}\n\nexport default Settings;\n","import React from 'react';\nimport { PropTypes } from 'prop-types';\nimport { connect } from 'react-redux';\nimport getPlayerAvatar from '../helpers/getPlayerAvatar';\n\nclass Feedback extends React.Component {\n  state = {\n    wellDone: false,\n  }\n\n  componentDidMount = () => {\n    const { correctAnswers } = this.props;\n    const minAssertions = 3;\n    if (correctAnswers >= minAssertions) {\n      this.setState({ wellDone: true });\n    }\n  }\n\n  handleClickPlayAgain = () => {\n    const { history } = this.props;\n    history.push('./');\n  }\n\n  handleClickRanking = () => {\n    const { history } = this.props;\n    history.push('./ranking');\n  }\n\n  render() {\n    const { wellDone } = this.state;\n    const { correctAnswers, finalScore, userEmail, userName } = this.props;\n    return (\n      <>\n        <div className=\"feedback-header\">\n          <img\n            data-testid=\"header-profile-picture\"\n            src={ getPlayerAvatar(userEmail) }\n            alt=\"player avatar\"\n            className=\"player-avatar\"\n          />\n          <p data-testid=\"header-player-name\">{ userName }</p>\n          <p\n            data-testid=\"header-score\"\n          >\n            score:\n            {' '}\n            { finalScore }\n          </p>\n        </div>\n        <div className=\"feedback-container\">\n          <p\n            data-testid=\"feedback-text\"\n            className={ wellDone ? 'welldone-msg' : 'could-better-msg' }\n          >\n            { wellDone\n              ? 'Well Done!' : 'Could be better...'}\n          </p>\n          <p data-testid=\"feedback-total-score\" className=\"total-score\">\n            {' '}\n            Final Score:\n            {' '}\n            <span>{ finalScore }</span>\n          </p>\n          <p data-testid=\"feedback-total-question\" className=\"total-assertions\">\n            Número de respostas corretas:\n            {' '}\n            <span>{ correctAnswers }</span>\n          </p>\n          <button\n            id=\"playAgain\"\n            className=\"play-again-btn\"\n            type=\"button\"\n            data-testid=\"btn-play-again\"\n            onClick={ this.handleClickPlayAgain }\n          >\n            Play again\n          </button>\n          <button\n            id=\"rankingBtn\"\n            className=\"ranking-btn\"\n            type=\"button\"\n            data-testid=\"btn-ranking\"\n            onClick={ this.handleClickRanking }\n          >\n            Ranking\n          </button>\n        </div>\n      </>\n\n    );\n  }\n}\n\nFeedback.propTypes = {\n  correctAnswers: PropTypes.number.isRequired,\n  finalScore: PropTypes.number.isRequired,\n  history: PropTypes.instanceOf(Object).isRequired,\n  userName: PropTypes.string.isRequired,\n  userEmail: PropTypes.string.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  correctAnswers: state.player.assertions,\n  finalScore: state.player.score,\n  userName: state.player.name,\n  userEmail: state.player.email,\n});\n\nexport default connect(mapStateToProps)(Feedback);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { GET_LOCAL_STORAGE } from '../helpers/fecthLocalStorage';\n\nclass Ranking extends Component {\n  handleClickGoHome = () => {\n    const { history } = this.props;\n    history.push('/');\n  }\n\n  render() {\n    const ranking = GET_LOCAL_STORAGE('ranking');\n    const sortedRanking = ranking.sort((a, b) => b.score - a.score);\n    return (\n      <div className=\"ranking-container\">\n        <button\n          id=\"goHomeBtn\"\n          className=\"go-home-btn\"\n          type=\"button\"\n          data-testid=\"btn-go-home\"\n          onClick={ this.handleClickGoHome }\n        >\n          Go Home\n        </button>\n        <p data-testid=\"ranking-title\" className=\"ranking-title\">Ranking</p>\n        { sortedRanking.map((player, index) => (\n          <div className=\"players\" key={ index }>\n            <img className=\"ranking-avatar\" src={ player.picture } alt=\"player avatar\" />\n            <p className=\"ranking-pos\">\n              { index + 1 }\n              º\n            </p>\n            <p\n              className={ index === 0 ? 'winner' : '' }\n              data-testid={ `player-name-${index}` }\n            >\n              {player.name}\n            </p>\n\n            <p\n              className={ index === 0 ? 'winner' : '' }\n              data-testid={ `player-score-${index}` }\n            >\n              {player.score}\n            </p>\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n\nRanking.propTypes = {\n  history: PropTypes.instanceOf(Object).isRequired,\n};\n\nexport default Ranking;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Login from './pages/Login';\nimport GamePage from './pages/GamePage';\nimport Settings from './pages/Settings';\nimport Feedback from './pages/Feedback';\nimport Ranking from './pages/Ranking';\nimport './App.css';\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route exact path=\"/\" render={ (props) => <Login { ...props } /> } />\n        <Route path=\"/gamepage\" render={ (props) => <GamePage { ...props } /> } />\n        <Route path=\"/settings\" component={ Settings } />\n        <Route path=\"/feedback\" render={ (props) => <Feedback { ...props } /> } />\n        <Route path=\"/ranking\" render={ (props) => <Ranking { ...props } /> } />\n      </Switch>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './redux/store/store';\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={ store }>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n","module.exports = __webpack_public_path__ + \"static/media/trivia.466d153e.png\";"],"sourceRoot":""}